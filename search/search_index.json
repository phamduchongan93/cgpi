{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#background","title":"Background","text":"<ul> <li>This is page is dedicated to describe the architect and technical aspect of Community Garden IoT Project.</li> <li>There are three kind of content in this documentation which are guide for installation, AWS device troubleshooting, Data Monitoring.</li> </ul> <p>Note</p> <p>Please get the latest release of the document since each release has some changes in architecture.</p>"},{"location":"#installation-guide","title":"Installation Guide","text":"<ul> <li>Install community garden script from the github page </li> <li>Connect RJ11 cable from ISS Transmitter to Davis Envoy. The communication between Envoy and raspberry pi will create two type of database which are sqlite and mysql. </li> </ul>"},{"location":"#roadmap","title":"Roadmap","text":"<ol> <li>Deploy sensors weather station.</li> <li>Feed data stream to AWS ecosystem.</li> <li>Test open hardware sensors for soil measurement.</li> </ol>"},{"location":"#architecture","title":"Architecture:","text":""},{"location":"#grid-vs-off-grid-design","title":"Grid vs Off Grid Design:","text":"<p>Grid like design, the community garden system would receive the energy provided from residential and commerical building directly. Losing certain piece of data data due to power outtage is possible since back up energy is not factored in the cost. While there is risk involve is low since data collected is farming sensors.</p> <p>Off Grid design, IoT computer and sensors are can be running via solar system, however number of sensors are limited.</p>"},{"location":"#transition-of-technology","title":"Transition of Technology:","text":"<ul> <li>Davis station is based in CA, most of their hardware is propriety hardware. This requires a lot of time to develope configuration to work around the technology. Second of all, the scarity of the parts would drive up the price. </li> </ul>"},{"location":"#project-component","title":"Project Component:","text":"<ul> <li>communitygarden-cli program: software based solution written by Community Garden Team to use for configuring and modifying the single board while deploying different environment. </li> <li>AWS IoT Core stack: Used to establish connection with AWS.</li> </ul>"},{"location":"Getting%20Started/docs/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"Getting%20Started/docs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"Getting%20Started/docs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"analysis/Comparative%20Analysis/","title":"Build with AWS","text":"<p>This is the current build that the community garden has been implementing for the summer build. The AWS IoT Core was introduced by the database team. Although there are features and add-ons for this service, this AWS IoT Core software is an MQTT message broker. since AWS IoT Core is open source, there is no fee involve while using this software.</p>"},{"location":"analysis/Comparative%20Analysis/#build-with-self-hosted-soluation","title":"Build with Self Hosted Soluation:","text":"<ul> <li>Due to the recent upgrade of raspberry pi 4. The potential running a message broker on the raspberry pi is possible as well as running a web-based dashboard. This new hardware upgrade helps to reduce the reliance on the AWS cloud.</li> <li>Visit the following link for information:</li> </ul> <ul> <li>This build is stable and well-supported by electronics enthusiasts. Additionally, the supply of open hardware is more available and budget-friendly to consumers. The only limitation is the lack of automation and scalability for this model. Compare AWS cloud-based solution, this require the user manually install the required services and need an end program or an end user to verify the usability.</li> </ul>"},{"location":"analysis/Network%20Analysis/","title":"Alternative Analysis","text":"Alternative 1 ( Running EC2 VPN) Alternative 2 ( Running router) Alternative 3 (reactivate 4g providers) Initial Cost $0.00 $40.00 $0.00 Monthly Cost $7.00 $0.00 $90.00 Expected Time (months) 9.00 9.00 9.00 Description IT and campus Involvement Benefit Alternative 1 Initiate Eduroam wifi from the school and spin up VPN server High Bypass IT firewall.  Student credential is stored on the sd card (security issue). Can deploy more services. Alternative 2 Purchase router to connect campus network Medium (due to isolation) Private network, but the cost is high when two stations are in different locations Alternative 3 Reactivate 4g providers $90 for 2 sensors station. none Alternative 4 Activate 4g hotspot $25 per station none private network, two stations can connect one hotspot. Note (An) I would recommend the first 2 months of the project to rely on the network campus without disclosing the services deployed, since most of the sensors don\u2019t require a lot of bandwidth. However, throughout the project, the bandwidth will increase knowing video streaming services would be deployed and implemented (due to outdoor camera devices), which is believed to start in the Fall semester. Researcher An Pham, Myriam Boutros."},{"location":"analysis/Network%20Analysis/#bandwith-comparison","title":"Bandwith Comparison","text":"<ul> <li>LPAwan is a new wireless technology that has lowest power consumption with longest range, and it is supported with AWS IoT Core. Consider this protocol for IoT sensors.</li> </ul>"},{"location":"community-garden/ECOWITT%20soil%20sensors/note/","title":"ECOWITT Soil Moisture Sensors","text":""},{"location":"community-garden/ECOWITT%20soil%20sensors/note/#specification-of-device","title":"Specification of device:","text":"<ul> <li>This is wireless soil moisture sensors that collect moisture data within 72 seconds with inserted to the soil.</li> <li>The sensors support real tiem data. </li> <li>Reporting distance is within 300feet/100m(in open area). </li> <li>This sensors is powered by  AA\u201d battery (not included, lithium recommended).</li> <li>Battery change (Lithium) every 50 day.</li> <li>IP66 water resistant rated.</li> </ul>"},{"location":"community-garden/ECOWITT%20soil%20sensors/note/#installation","title":"Installation","text":"<ul> <li>This devices will be installed with weewx as main software to archive the sensor data.</li> </ul>"},{"location":"community-garden/ECOWITT%20soil%20sensors/note/#note","title":"Note:","text":"<ul> <li>The Wi-Fi gateway( GW1000/GW1100 ) can support max 8 soil moisture sensors. Each new sensor will be recognized as a new channel according to the Power-on sequence.</li> <li>Please do not touch the stone or hard rock soil. If the soil is too hard and dry, it is possible to damage the sensor. </li> </ul>"},{"location":"community-garden/Install%20AWS%20IoT%20Core/","title":"Install AWS IoT Core","text":""},{"location":"community-garden/Install%20Davis%20Weather%20Station/","title":"Guide to Install Davis Weather Station ( No longer supported. Please refer to ECOWITT  as default provider )","text":""},{"location":"community-garden/Install%20Davis%20Weather%20Station/#requirement","title":"Requirement:","text":"<ul> <li>Raspberry pi 2/3/4 or Linux based compunter.</li> <li>Weather Sensor Station Example:</li> <li>Weather Station.</li> <li>DSL cable (R11/R12 cable) - used to connect sensors.</li> <li>Internet connection.</li> <li>SD card.</li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#architecture-and-diagram","title":"Architecture and Diagram","text":"<ul> <li>The diagram belowed is used to convey the interaction of Davis Weather Station and weewx open source software.</li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#installation-guide-hardware","title":"Installation Guide (Hardware)","text":"<ul> <li> <p>Connect all sensor cable to ISS box </p> </li> <li> <p>From Console port connect to Davis Envoy (Console Logger) via usb cable.</p> </li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#installation-guide-software","title":"Installation Guide (Software)","text":"<ol> <li>Install community garden script from the github for latest version by typing following command <code>git clone https://github.com/phamduchongan93/cgpi</code></li> <li>To verify version of  community garden software type <code>./communitygarden-cli -v</code></li> <li>To install weewx and database, type <code>./communitygarden-cli  --install-weewx</code></li> <li>To verify if weewx is running type <code>./communitygarden-cli --status-weewx</code></li> </ol> <p>Note</p> <p>In case you want to reinstall weewx, type <code>./communitygarden-cli --uninstall-weewx</code></p>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#troubleshoot","title":"Troubleshoot:","text":"<ul> <li>If the RF11 is broken, follow the clips below for instruction of replaring RF11 Connector</li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#support","title":"Support","text":"<p>Warning</p> <p>Internal Use Only: If you find any error, please open an issue at https://github.com/phamduchongan93/cgpi/issues. I will take a look asap.</p>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/Sample/","title":"Sample of Davis Station Deployment","text":""},{"location":"community-garden/Install%20Solar%20System/","title":"Solar System","text":""},{"location":"community-garden/Install%20Solar%20System/#diagganosis","title":"Diagganosis","text":""},{"location":"community-garden/Install%20Solar%20System/#charging-test","title":"Charging Test","text":"<p> Status LED   - The Status LED indicates charging status and any existing solar input error conditions. The Status LED is on when charging during the day and off at night. The Status LED will flash red whenever an error condition(s) exists. Table 2 lists the Status LED indications.</p> <ul> <li>Green blinking means the battery is charging.</li> <li>Battery need to charge to 12V in order to be fully charged.</li> </ul>"},{"location":"community-garden/Install%20Solar%20System/#battery","title":"Battery","text":"<ul> <li>Vender Contact</li> <li>Address: 2009 W San Bernardino Rd, West Covina, CA 91790 Phone: (800) 757-0303</li> </ul>"},{"location":"logbook/06-27/","title":"Set Up Battery and Analysis IoT architecture","text":"<ul> <li> <p>In order to test if battery can carry the charge, the battery need to generate 12V on the Multimeter measurement. As is right now, the battery did show the 12 V output.</p> </li> <li> <p>However, as recommened for any DIY off-grid instalation, the MPPT charge controller has to provide green indicator to notify the healthy state.</p> </li> <li> <p>The AWS IoT as mqtt message broker only able to receive message from weewx service, however this is a simple query that fetch info and send it to AWS IoT Core. In short, the communication is not statefull. Because of this limitation, storage mechanism has to be inititated. I set up a bucket to store the data from weewx on AWS cloud. Refer to video to have a better understand the architect of AWS IoT.</p> </li> <li> <p>To achieve continunity and cost effective when running IoT services, creating a single channel stream is the best option to operate the IoT projects. In other word, the real time data design is what the project aim for.</p> </li> </ul>"},{"location":"logbook/06-27/#reference","title":"Reference:","text":"<ul> <li>For more information, please visit phamduchongan93.github.io/cgpi to get the latest info of AWS IoT core.</li> </ul>"},{"location":"logbook/06-28/","title":"Index","text":"<ul> <li>Davis station part begin to </li> <li>B</li> </ul>"},{"location":"logbook/08-02/meeting/","title":"Meeting","text":"<ul> <li>Moisture threadhold level.</li> <li>Does the water control pump system support the moisture level?</li> </ul>"},{"location":"logbook/08-02/meeting/#gps-logging","title":"GPS logging:","text":""},{"location":"logbook/08-02/meeting/#-gps-outage-problem","title":"- GPS outage problem.","text":""},{"location":"logbook/08-02/meeting/#other-alternative","title":"Other alternative:","text":"<ul> <li>location ping via internet ip.</li> </ul>"},{"location":"logbook/08-02/meeting/#remote-sensing-and-remote-imaging","title":"Remote Sensing and Remote Imaging:","text":"<ul> <li>Yield monitoring: Not Availability (based on AWS analytics)</li> <li>Remote crop:  </li> </ul>"},{"location":"logbook/08-02/meeting/#resource-optimization","title":"Resource Optimization:","text":"<ul> <li>4.2m2*15m.</li> </ul>"},{"location":"logbook/08-02/meeting/#agriculture-and-live-stock","title":"Agriculture and live stock:","text":"<ul> <li>These technologies enable farmers to monitor and analyze critical factors such as soil health, weather conditions, crop growth, and livestock behavior, allowing for precise and informed decision-making. Smart agriculture helps enhance productivity, reduce resource wastage, and improve sustainability.</li> </ul>"},{"location":"logbook/09-28/SA/","title":"SA","text":"<ul> <li>Reduce complexity by embracing open architecture.</li> <li>SA</li> <li>Operational requirements</li> <li>Maintainance </li> <li>TPMs</li> <li>Functional structure</li> <li>Top Level components.</li> </ul>"},{"location":"logbook/09-28/SA/#what-kind-of-package-of-the-system-that-we-create","title":"What kind of package of the system that we create?","text":""},{"location":"logbook/09-28/SA/#-functional-flow-diagram-ffd","title":"- Functional Flow Diagram (FFD).","text":""},{"location":"logbook/09-28/SA/#_2","title":"SA","text":"<p>{    function:   input:   output:   resources: phone/email (communication channel).   limitation: order info, existing contract, risk of moving from point A/B 500 miles/day, Teams cost, Price, Availability. }</p> <p>connect to local wifi -&gt; collect sensors from mqtt -&gt; download the sensors in form of json.</p> <p>{   Function: Connect to computer.   input: USB Connection Signal,  Bluetooth or Radio Frequency signal, AA Battery.   output: connected status.   Constraint(controls): Connection Range, Operating time, Recharging time, Length of battery.   Mechanisms(resources): bluetooth, wire, RF wireless, battery, usb connect dongle. }</p> <p>Function: Rotate 360</p>"},{"location":"logbook/Meeting/08-07-2023/","title":"Interfaces","text":""},{"location":"logbook/Meeting/08-07-2023/#ecowitt-new-kit","title":"ECOWITT New Kit:","text":"<ul> <li>Operate on 915Mz Frequency.</li> <li>Current tech (RF to Wifi).</li> <li>API Call from the vendor website or custom build. </li> </ul>"},{"location":"logbook/Meeting/08-07-2023/#problem-with-weewx","title":"Problem with Weewx:","text":"<ul> <li>Modules are not easy to decompose for functionality.</li> <li>Require human interaction for troubleshooting.</li> <li>Lack of cloud integration since cloud is note required.</li> </ul>"},{"location":"logbook/Meeting/08-07-2023/#lorawan-kit","title":"LoRaWAN Kit:","text":"<ul> <li>Arduino compabitle and Raspberry Pi Compatible</li> <li>Radio Technology (LORAWAN vs Wifi).</li> <li>LORA + WAN (cover up to 3 kilometers). </li> <li>LoRA gateway (for soil moisture, rain sensor, and light sensors).</li> </ul>"},{"location":"logbook/Meeting/08-07-2023/#ojbective-updated","title":"Ojbective (updated):","text":"<ul> <li>Affirm about the interfaces of the sensors for the APP and database team.</li> </ul>"},{"location":"logbook/Meeting/08-07-2023/#smart-farming-stack","title":"Smart Farming Stack","text":"<ul> <li>Remote Sensoring and Remote Imaging.</li> <li>Using Remote Imaging to verify the data.</li> </ul>"},{"location":"logbook/Meeting/08-07-2023/#water-pump-system","title":"Water Pump System:","text":"<ul> <li>Smart Water System:</li> <li>Automation.</li> <li></li> </ul>"},{"location":"logbook/Meeting/08-07-2023/#cloud-storage","title":"Cloud Storage (","text":""},{"location":"logbook/Meeting/08-07-2023/#open-end-question","title":"Open End Question:","text":"<ul> <li>How many sensors can be supported </li> </ul>"},{"location":"logbook/Meeting/08-15-2023/","title":"Overview","text":"<ul> <li>How reliable our sensors data?</li> <li>Tests can run against data. <ul> <li>Regression testing (consolate data team). </li> </ul> </li> <li>How to due with different soil moisture sensors on the field?</li> <li>Architecture Differences</li> <li>Trade-off between bandwith and power consumption.</li> <li>Seperate the Sensors Network from the Cloud. The Cloud should be last mileage component.</li> <li>Components breaking down.</li> <li> <p>LORAWAN Spefication</p> </li> <li> <p>Constrant:</p> </li> <li>Select channels that can avoid collision.</li> <li> <p>Gateway should be close to end-device.</p> </li> <li> <p>Other Case Study:</p> </li> <li> <p>Smart Transportation and </p> </li> <li> <p>Potential Development:</p> </li> <li>Reducing the power consumption by ultizing multi-hop solutions to send data</li> <li>This would reduce transmitting power and reduce the consumption.</li> </ul>"},{"location":"logbook/Report/meeting/","title":"Previous Meeting Note:","text":"<ul> <li>Verifying Davis Station Status.</li> <li>Building off-grid system. </li> <li>Defining and building bucket for logging. </li> <li>Getting message system ready for s3 bucket.</li> </ul>"},{"location":"logbook/Report/meeting/#report","title":"Report","text":"<ul> <li>Hope you are doing well.</li> <li>To have a insight look for technical documentation of the project, please visit https://cppfarm.anpham.me for information regarding software maintnance and installation of solar and sensor station.</li> <li>Knowing that we try to apply \"agile\" for the projectp previously. Tasks and operations are divided into parts which are installing weather station, install solar system, and install network. These tasks can be perfomed individually without affecting each other. So far, none defect has been found on the equipment.</li> <li>Knowning this project is funded by AWS grant. Beside AWS IoT Core solution provided by AWS, there are other BYO (Build Your Own) solution. This approach is due to the opportunity of having new technolgoy stack that has been developed by single board community. This tech stack is maturely tested, supported, and popular to educational community.  As for Davis Weather Station, with previous approach of Melvin and Peter and new cable installed, I can put together a webpage dashboard for viewing the data. However, due to proprietary cable that Davis company has been implementing, the damage cable I tried to fix can't be connected to the sensors. </li> <li>I also added one of Professor to our supporter list, we had some discussion before regarding Community Garden project during Spring semester. The scope of discussion is narrawed to network deployment concern. He also mentioned IT department should be one of our stakeholders since we are going to consume soome of their network bandwith. However, right now this is not really our concern since most of our dataset are sensors data. Unless you guys want to have the outdoor camera installed for remote monitoring which require some wiring work for the camera inside the box, we are going to need more bandwith for the camera. </li> <li>I try to install the solar indoor while letting the pannel faces the window to charge the battery. The solar only charge around 0-7V which is not enough to charge the battery and power the weather station.</li> <li>The limitation we have is that weewx can't seem to provide a single json payload. There is an extension of the program, yet it doesn't seem seem to be supported anymore, latest release is weewx-json_1.1. I hope that using python to query the database file to message AWS IoT would has the better chance. Because of this limitation, a S3 bucket has to be created prior to data filtering. Long story short, our station can communicate to AWS Cloud. I will try to test out the python script next week.</li> <li>There is other thing is seems like the solar pannel has never been used since no wiring work has been done to solar pannel. I've been contacting our solar vendor which is solarland. If they are not responsive, I just document my wiring work and contact one of the professor from supporter list since she seems to be expert in off-grid solar.</li> <li>After July, we should able to record a webinair to demonstrate our tech stack for software side.</li> <li>If you have any further concern regarding the deliverable matter of this project, feel free to reach out to me. </li> </ul>"},{"location":"logbook/Review/main/","title":"Review List","text":"<ul> <li>Link</li> </ul> <p>Electronics for Dogs 5.0 out of 5 stars Very good, reasonable price, no console required: view and control with web browser or cellphone app Reviewed in the United States on February 15, 2022 Verified Purchase I am using this to replace an aging Vantage Pro station. Several things which I like better about the Ecowitt: 1. No console: uses a simple and inexpensive gateway module instead. 2. Data can be viewed from anywhere, using a cell phone app or a web browser. 3. Compatible with almost any operating system, including Linux and Raspberry Pi. 4. Gateway module connects all data to a 2.4 MHz WiFi network (required). 5. Except for the gateway, all sensors are powered by their own batteries, so they can be sited independently. (And the gateway does remember it's settings during power outages). 7. Once you have completed, the setup, you will have remote viewing from the Ecowitt server via cellphone or browser, and can easily set up Weather Underground as well.</p> <p>The only disadvantages compared to the Vantage Pro are: 1. Does not come with a solar radiation shield for the exterior temperature/humidity sensor 2. Rain gauge collector is relatively shallow, so it won't accurately measure snow melt.</p> <p>Setup was pretty straightforward, although the Quick Start Guide and the Manual are somewhat confusing in their description of the steps involved; be sure to keep both of them handy while setting up the gateway. Once that is accomplished, the rest of setup is pretty straightforward.</p> <p>The temperature and humidity readings will vary slightly between different sensors, but even before calibration they were all within about +/- 2 F or +/-2% humidity. Calibration allows you to specify offsets for each temperature and humidity sensor. Once that is done the sensors track fairly well.</p> <p>If a known accurate thermometer and hygrometer are available, then just tweak the sensor offsets until all the readings agree. If not, then set up all the sensors in one room where the temperature is fairly constant, and allow them to equalize for at least an hour. At that point, you can calculate the mean temperature and humidity reading, and the offset (difference) between each sensor and the mean (a small spreadsheet is handy for this). Enter these offset values to calibrate each sensor.</p> <p>Note that the indoor sensor attached to the gateway module needs good ventilation since it generates a small amount of internal heat, which could throw off calibration unless it is properly ventilated. Place it and the other sensors at least a foot or two away from the gateway module or any other sources of heat, and elevate the indoor sensor a few inches to allow air to flow around it.</p> <p>For the outdoor temperature/humidity sensor, I am using a LaCrosse 925-1418 Sensor Protection Shield (Ecowitt has a very similar one, but it is not currently available on Amazon). Note that this type of shield has to be mounted out of direct sunlight; I put it on the back of a porch pillar. Read less</p>"}]}