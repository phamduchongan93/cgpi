{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#background","title":"Background","text":"<ul> <li>This is page is dedicated to describe the architect and technical aspect of Community Garden IoT Project.</li> <li>There are three kind of content in this documentation which are guide for installation, AWS device troubleshooting, Data Monitoring.</li> </ul> <p>Note</p> <p>Please get the latest release of the document since each release has some changes in architecture.</p>"},{"location":"#installation-guide","title":"Installation Guide","text":"<ul> <li>Install community garden script from the github page </li> <li>Connect RJ11 cable from ISS Transmitter to Davis Envoy. The communication between Envoy and raspberry pi will create two type of database which are sqlite and mysql. </li> </ul>"},{"location":"#roadmap","title":"Roadmap","text":"<ol> <li>Deploy sensors weather station.</li> <li>Feed data stream to AWS ecosystem.</li> <li>Test open hardware sensors for soil measurement.</li> </ol>"},{"location":"#architecture","title":"Architecture:","text":""},{"location":"#grid-vs-off-grid-design","title":"Grid vs Off Grid Design:","text":"<p>Grid like design, the community garden system would receive the energy provided from residential and commerical building directly. Losing certain piece of data data due to power outtage is possible since back up energy is not factored in the cost. While there is risk involve is low since data collected is farming sensors.</p> <p>Off Grid design, IoT computer and sensors are can be running via solar system, however number of sensors are limited.</p>"},{"location":"#transition-of-technology","title":"Transition of Technology:","text":"<ul> <li>Davis station is based in CA, most of their hardware is propriety hardware. This requires a lot of time to develope configuration to work around the technology. Second of all, the scarity of the parts would drive up the price. </li> </ul>"},{"location":"#project-component","title":"Project Component:","text":"<ul> <li>communitygarden-cli program: software based solution written by Community Garden Team to use for configuring and modifying the single board while deploying different environment. </li> <li>AWS IoT Core stack: Used to establish connection with AWS.</li> </ul>"},{"location":"Getting%20Started/docs/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"Getting%20Started/docs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"Getting%20Started/docs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"analysis/Comparative%20Analysis/","title":"Build with AWS","text":"<ul> <li>This is the current build that community garden has been implementing for summer build. The AWS IoT Core was introduced by database team. Although, there are features and addons for this service, this AWS IoT Core software is a mqtt message broker. since AWS IoT Core is open source, their is now fee involve while using this software.</li> </ul>"},{"location":"analysis/Comparative%20Analysis/#build-with-self-hosted-soluation","title":"Build with Self Hosted Soluation:","text":"<ul> <li>Due to the recent upgrade of raspberry pi 4. The potential of running message broker on raspberry pi is possible as well as running a a web-based dashboard. This new hardware upgrade helps to reduce the reliance on AWS cloud.</li> <li>Visit the following link for information: https://www.youtube.com/watch?v=_DO2wHI6JWQ&amp;ab_channel=LearnEmbeddedSystems</li> </ul> <ul> <li>In short, this build is stable and well supported around the electronics enthuists. Additionally, the supply of open hardware is more avaible and budget friendly toward consummer. The only limitation is that the lack of automation and scalability for this model. Compare AWS cloud based solution, this require user manually install the required services and need an end program or an end user to verify the usability.   </li> </ul>"},{"location":"analysis/Network%20Analysis/","title":"Alternative Analysis","text":"Alternative 1 ( Running EC2 VPN) Alternative 2 ( Running router) Alternative 3 (reactivate 4g providers) Initial Cost $0.00 $40.00 $0.00 Monthly Cost $7.00 $0.00 $90.00 Expected Time (months) 9.00 9.00 9.00 Description IT and campus Involvement Benefit Alternative 1 Initiate Eduroam wifi from the school and spin up VPN server High Bypass IT firewall.  Student credential is stored on the sd card (security issue). Can deploy more services. Alternative 2 Purchase router to connect campus network Medium (due to isolation) Private network, but the cost is high when two stations are in different locations Alternative 3 Reactivate 4g providers $90 for 2 sensors station. none Alternative 4 Activate 4g hotspot $25 per station none private network, two stations can connect one hotspot. Note (An) I would recommend the first 2 months of the project to rely on the network campus without disclosing the services deployed, since most of the sensors don\u2019t require a lot of bandwidth. However, throughout the project, the bandwidth will increase knowing video streaming services would be deployed and implemented (due to outdoor camera devices), which is believed to start in the Fall semester. Researcher An Pham, Myriam Boutros."},{"location":"analysis/Network%20Analysis/#bandwith-comparison","title":"Bandwith Comparison","text":"<ul> <li>LPAwan is a new wireless technology that has lowest power consumption with longest range, and it is supported with AWS IoT Core. Consider this protocol for IoT sensors.</li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/","title":"Guide to Install Davis Weather Station","text":""},{"location":"community-garden/Install%20Davis%20Weather%20Station/#requirement","title":"Requirement:","text":"<ul> <li>Raspberry pi 2/3/4 or Linux based compunter.</li> <li>Weather Sensor Station Example:</li> <li>Weather Station.</li> <li>DSL cable (R11/R12 cable) - used to connect sensors.</li> <li>Internet connection.</li> <li>SD card.</li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#architecture-and-diagram","title":"Architecture and Diagram","text":"<ul> <li>The diagram belowed is used to convey the interaction of Davis Weather Station and weewx open source software.</li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#installation-guide-hardware","title":"Installation Guide (Hardware)","text":"<ul> <li> <p>Connect all sensor cable to ISS box </p> </li> <li> <p>From Console port connect to Davis Envoy (Console Logger) via usb cable.</p> </li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#installation-guide-software","title":"Installation Guide (Software)","text":"<ol> <li>Install community garden script from the github for latest version by typing following command <code>git clone https://github.com/phamduchongan93/cgpi</code></li> <li>To verify version of  community garden software type <code>./communitygarden-cli -v</code></li> <li>To install weewx and database, type <code>./communitygarden-cli  --install-weewx</code></li> <li>To verify if weewx is running type <code>./communitygarden-cli --status-weewx</code></li> </ol> <p>Note</p> <p>In case you want to reinstall weewx, type <code>./communitygarden-cli --uninstall-weewx</code></p>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#troubleshoot","title":"Troubleshoot:","text":"<ul> <li>If the RF11 is broken, follow the clips below for instruction of replaring RF11 Connector</li> </ul>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/#support","title":"Support","text":"<p>Warning</p> <p>Internal Use Only: If you find any error, please open an issue at https://github.com/phamduchongan93/cgpi/issues. I will take a look asap.</p>"},{"location":"community-garden/Install%20Davis%20Weather%20Station/Sample/","title":"Sample of Davis Station Deployment","text":""},{"location":"community-garden/Install%20Solar%20System/","title":"Solar System","text":""},{"location":"logbook/06-27/","title":"Set Up Battery and Analysis IoT architecture","text":"<ul> <li> <p>In order to test if battery can carry the charge, the battery need to generate 12V on the Multimeter measurement. As is right now, the battery did show the 12 V output.</p> </li> <li> <p>However, as recommened for any DIY off-grid instalation, the MPPT charge controller has to provide green indicator to notify the healthy state.</p> </li> <li> <p>The AWS IoT as mqtt message broker only able to receive message from weewx service, however this is a simple query that fetch info and send it to AWS IoT Core. In short, the communication is not statefull. Because of this limitation, storage mechanism has to be inititated. I set up a bucket to store the data from weewx on AWS cloud. Refer to video to have a better understand the architect of AWS IoT.</p> </li> <li> <p>To achieve continunity and cost effective when running IoT services, creating a single channel stream is the best option to operate the IoT projects. In other word, the real time data design is what the project aim for.</p> </li> </ul>"},{"location":"logbook/06-27/#reference","title":"Reference:","text":"<ul> <li>For more information, please visit phamduchongan93.github.io/cgpi to get the latest info of AWS IoT core.</li> </ul>"},{"location":"logbook/06-28/","title":"Index","text":"<ul> <li>Davis station part begin to </li> <li>B</li> </ul>"},{"location":"logbook/Report/meeting/","title":"Previous Meeting Note:","text":"<ul> <li>Verifying Davis Station Status.</li> <li>Building off-grid system. </li> <li>Defining and building bucket for logging. </li> <li>Getting message system ready for s3 bucket.</li> </ul>"},{"location":"logbook/Report/meeting/#report","title":"Report","text":"<ul> <li>Hope you are doing well.</li> <li>To have a insight look for technical documentation of the project, please visit https://cppfarm.anpham.me for information regarding maintnance and installation of solar and sensor station.</li> <li>Knowing that we try to apply \"agile\" for the projectp previously. Tasks and operations are divided into parts which are installing weather station, install solar system, and install network. These tasks can be perfomed individually without affecting each other. So far, none defect has been found on the equipment.</li> <li>Knowning this project is funded by AWS grant. Beside AWS IoT Core solution provided by AWS, there are other BYO (Build Your Own) solution. This approach is due to the opportunity of having new technolgoy stack that has been developed by single board community. This tech stack is maturely tested, supported, and popular to educational community.  As for Davis Weather Station, with previous approach of Melvin and Peter and new cable installed, I can put together a webpage dashboard for viewing the data. To be clear, our weather station so far does not rely  on AWS. I can install a monitoring station inside the office . As dicussed before, we are not yet  able to garther the soil sensors for the agricultural group which we listed as requirement. But rain metter and windspeed are possible to gather pecisely.</li> <li>I also added one of Professor to our supporter list, we had some discussion before regarding Community Garden project during Spring semester. The scope of discussion is narrawed to network deployment concern. He also mentioned IT department should be one of our stakeholders since we are going to consume soome of their network bandwith. However, right now this is not really our concern since most of our dataset are sensors data. Unless you guys want to have the outdoor camera installed for remote monitoring which require some wiring work for the camera inside the box, we are going to need more bandwith for the camera. </li> <li>I try to install the solar indoor while letting the pannel faces the window to charge the battery. The solar only charge around 0-7V which is not enough to charge the battery and power the weather station.</li> <li>The limitation we have is that weewx can't seem to provide a single json payload. There is an extension of the program, yet it doesn't seem seem to be supported anymore, latest release is weewx-json_1.1. I hope that using python to query the database file to message AWS IoT would has the better chance. Because of this limitation, a S3 bucket has to be created prior to data filtering. Long story short, our station can communicate to AWS Cloud. I will try to test out the python script next week.</li> <li>There is other thing is seems like the solar pannel has never been used since no wiring work has been done to solar pannel. I've been contacting our solar vendor which is solarland. If they are not responsive, I just document my wiring work and contact one of the professor from supporter list since she seems to be expert in off-grid solar.</li> <li>After July, we should able to record a webinair to demonstrate our tech stack for software side.</li> <li>If you have any further concern regarding the deliverable matter of this project, feel free to reach out to me. </li> </ul>"}]}